version: '3.7'
services:
  # PostgreSQL service
  apptrackerdb:
    image: postgres:15.4
    container_name: postgres
    env_file:
      - ./postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init-scripts:/docker-entrypoint-initdb.d
  # RabbitMQ service
  rabbitmq:
    image: "rabbitmq:3.12-management"
    container_name: rabbitmq
    env_file:
      - ./rabbit.env
    ports:
      - "56671:5671"     # AMQPS protocol
      - "15672:15672"    # Management console
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./conf/rabbitmq-server.conf:/etc/rabbitmq/conf.d/ssl.conf:ro
      - ./ssl/ca.crt:/etc/ssl/ca.crt:ro
      - ./ssl/server.crt:/etc/ssl/server.crt:ro
      - ./ssl/server.key:/etc/ssl/server.key:ro
  # Telegram bot
  telegram-bot:
    container_name: telegram-bot
    build:
      context: .
      dockerfile: Dockerfile_bot
    env_file:
      - ./bot.env
    depends_on:
      - apptrackerdb
      - rabbitmq
    restart: always

volumes:
  rabbitmq_data:
  postgres_data: